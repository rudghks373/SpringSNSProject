/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.52
 * Generated at: 2018-06-12 02:14:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta name=viewport content=\"width=device-width, initial-scale=1, user-scalable=0\">\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/core.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"css/core2.css\" media=\"only screen and (min-width:800px)\">\r\n");
      out.write("<title>My Social Network</title>\r\n");
      out.write("<style>\r\n");
      out.write(".page-msg {\r\n");
      out.write("\tdisplay: table;\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\theight: calc(100% - 90px);\r\n");
      out.write("}\r\n");
      out.write(".page-msg .desc {\r\n");
      out.write("\tdisplay: table-cell;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tvertical-align: middle;\r\n");
      out.write("}\r\n");
      out.write(".hide {\r\n");
      out.write("\tdisplay: none;\r\n");
      out.write("}\r\n");
      out.write(".feed {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tpadding: 15px 0;\r\n");
      out.write("\tbox-sizing: border-box;\t\r\n");
      out.write("\tbackground-color: white;\r\n");
      out.write("\tborder: 1px solid #ddd;\r\n");
      out.write("}\r\n");
      out.write(".feed .face {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 40px; height: 40px;\r\n");
      out.write("\tborder: 1px solid #ddd;\r\n");
      out.write("\tborder-radius: 40px;\r\n");
      out.write("\tbackground-image: url(\"images/contact.jpg\");\r\n");
      out.write("}\r\n");
      out.write(".feed .name {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tmargin-left: 15px;\r\n");
      out.write("\tline-height: 42px;\r\n");
      out.write("\tfont-size: 1.1em;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("}\r\n");
      out.write(".feed .desc {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("\tpadding: 15px 0px;\r\n");
      out.write("\tbox-sizing: border-box;\t\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"background-color: #eee\">\r\n");
      out.write("\t<div class=\"page-hdr\"> MySNS\r\n");
      out.write("\t\t<div class=\"navicon\" onclick=\"showMenu()\"></div>\r\n");
      out.write("\t\t<div class=\"ctxmnu pen\" onclick=\"writeNew()\"></div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div class=\"page-mnu\">\r\n");
      out.write("\t\t<div class=\"menu\" onclick=\"onSelect('logout')\">로그아웃</div>\r\n");
      out.write("\t\t<div class=\"menu\" onclick=\"onSelect('close')\">닫기</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"--empty-msg\" class=\"page-msg\">\r\n");
      out.write("\t\t<div class=\"desc\">작성글이 존재하지 않습니다.</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"--feed-list\" class=\"section\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("<script src=\"js/jquery-1.12.0.min.js\"></script>\r\n");
      out.write("<script src=\"js/core.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function() {\r\n");
      out.write("\tAJAX.call(\"jsp/session.jsp\", null, function (data) {\r\n");
      out.write("\t\tvar id = data.trim();\r\n");
      out.write("\t\tif (id == \"NA\") {\r\n");
      out.write("\t\t\twindow.location.href = \"login.html\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse {\r\n");
      out.write("\t\t\tstart(id);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function start(id) {\r\n");
      out.write("\tvar params = \"id=\" + id;\r\n");
      out.write("\tAJAX.call(\"jsp/fetch.jsp\", params, function (data) {\r\n");
      out.write("\t\tvar list = JSON.parse(data.trim());\r\n");
      out.write("\t\tif (list.length > 0) {\r\n");
      out.write("\t\t\t$(\"#--empty-msg\").addClass(\"hide\");\r\n");
      out.write("\t\t\tshowFeeds(list);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showMenu(hide) {\r\n");
      out.write("\tif (hide == false) {\r\n");
      out.write("\t\t$(\".page-mnu\").css(\"left\", \"-240px\");\r\n");
      out.write("\t}\r\n");
      out.write("\telse {\r\n");
      out.write("\t\t$(\".page-mnu\").css(\"left\", 0);\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function writeNew() {\r\n");
      out.write("\twindow.location.href = \"write.html\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function onSelect(menu) {\r\n");
      out.write("\tif (menu == \"logout\") {\r\n");
      out.write("\t\tlogout();\r\n");
      out.write("\t}\r\n");
      out.write("\tshowMenu(false);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function logout() {\r\n");
      out.write("\tif(confirm(\"로그아웃 하시겠습니까?\") == true) {\r\n");
      out.write("\t\tAJAX.call(\"jsp/logout.jsp\", null, function (data) {\r\n");
      out.write("\t\t\twindow.location.href = \"login.html\";\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showFeeds(list) {\r\n");
      out.write("\tvar str = \"\";\r\n");
      out.write("\tfor (var i=0; i<list.length; i++) {\r\n");
      out.write("\t\tstr += showFeed(list[i]);\r\n");
      out.write("\t}\r\n");
      out.write("\t$(\"#--feed-list\").html(str);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showFeed(feed) {\r\n");
      out.write("\tvar str = \"<div class='feed mbot-10'>\";\r\n");
      out.write("\t\r\n");
      out.write("\tstr += \"<div class='section phor-16'>\";\r\n");
      out.write("\tstr += \"<div class='face flex-embed'></div>\";\r\n");
      out.write("\tstr += \"<div class='name'>\" + feed.id + \"</div>\";\r\n");
      out.write("\tstr += \"<div class='desc'>\" + feed.desc + \"</div>\";\r\n");
      out.write("\tstr += \"</div>\";\r\n");
      out.write("\t\r\n");
      out.write("\tvar images = feed.images;\r\n");
      out.write("\tif (images.length == 1) {\r\n");
      out.write("\t\tstr += \"<div class='section'>\";\r\n");
      out.write("\t\tstr += \"<div class='flex-embed r16by9' style='background-image: url(\\\"\" + getUrl(feed, 0) + \"\\\")'></div>\";\r\n");
      out.write("\t\tstr += \"</div>\";\r\n");
      out.write("\t}\r\n");
      out.write("\telse if (images.length == 2) {\r\n");
      out.write("\t\tstr += \"<div class='grid-50'>\";\r\n");
      out.write("\t\tstr += \"<div class='flex-embed' style='background-image: url(\\\"\" + getUrl(feed, 0) + \"\\\")'></div>\";\r\n");
      out.write("\t\tstr += \"</div>\";\r\n");
      out.write("\t\tstr += \"<div class='grid-50'>\";\r\n");
      out.write("\t\tstr += \"<div class='flex-embed' style='background-image: url(\\\"\" + getUrl(feed, 1) + \"\\\")'></div>\";\r\n");
      out.write("\t\tstr += \"</div>\";\r\n");
      out.write("\t}\r\n");
      out.write("\telse if (images.length == 3) {\r\n");
      out.write("\t\tstr += \"<div class='grid-66'>\";\r\n");
      out.write("\t\tstr += \"<div class='flex-embed' style='background-image: url(\\\"\" + getUrl(feed, 0) + \"\\\")'></div>\";\r\n");
      out.write("\t\tstr += \"</div>\";\r\n");
      out.write("\t\tstr += \"<div class='grid-33'>\";\r\n");
      out.write("\t\tstr += \"<div class='flex-embed' style='background-image: url(\\\"\" + getUrl(feed, 1) + \"\\\")'></div>\";\r\n");
      out.write("\t\tstr += \"</div>\";\r\n");
      out.write("\t\tstr += \"<div class='grid-33'>\";\r\n");
      out.write("\t\tstr += \"<div class='flex-embed' style='background-image: url(\\\"\" + getUrl(feed, 2) + \"\\\")'></div>\";\r\n");
      out.write("\t\tstr += \"</div>\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tstr += \"</div>\";\r\n");
      out.write("\treturn str;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function getUrl(feed, index) {\r\n");
      out.write("\treturn \"images/\" + feed.id + \"/\" + feed.images[index];\r\n");
      out.write("}\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
